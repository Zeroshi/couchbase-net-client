using Couchbase.Core.Sharding;
using Xunit;

namespace Couchbase.UnitTests.Core.Sharding
{
    public class KetamaKeyMapperTests
    {
        private const string Key = "XXXXX";

        [Theory]
        [InlineData(2, "thekey0")]
        [InlineData(2, "thekey1")]
        [InlineData(3, "thekey2")]
        [InlineData(1, "thekey3")]
        [InlineData(1, "thekey4")]
        [InlineData(2, "thekey5")]
        [InlineData(1, "thekey6")]
        [InlineData(2, "thekey7")]
        [InlineData(3, "thekey8")]
        [InlineData(3, "thekey9")]
        [InlineData(3, "thekey10")]
        [InlineData(2, "thekey11")]
        [InlineData(1, "thekey13")]
        [InlineData(3, "thekey14")]
        [InlineData(3, "thekey15")]
        [InlineData(1, "thekey16")]
        [InlineData(2, "thekey17")]
        [InlineData(3, "thekey18")]
        [InlineData(1, "thekey19")]
        [InlineData(2, "thekey20")]
        [InlineData(2, "thekey21")]
        [InlineData(2, "thekey22")]
        [InlineData(1, "thekey23")]
        [InlineData(2, "thekey24")]
        [InlineData(2, "thekey25")]
        [InlineData(3, "thekey26")]
        [InlineData(3, "thekey27")]
        [InlineData(2, "thekey28")]
        [InlineData(2, "thekey29")]
        [InlineData(1, "thekey30")]
        [InlineData(2, "thekey31")]
        [InlineData(2, "thekey32")]
        [InlineData(2, "thekey33")]
        [InlineData(1, "thekey34")]
        [InlineData(3, "thekey35")]
        [InlineData(3, "thekey36")]
        [InlineData(1, "thekey37")]
        [InlineData(2, "thekey38")]
        [InlineData(2, "thekey39")]
        [InlineData(3, "thekey40")]
        [InlineData(2, "thekey41")]
        [InlineData(3, "thekey42")]
        [InlineData(2, "thekey43")]
        [InlineData(3, "thekey44")]
        [InlineData(3, "thekey45")]
        [InlineData(2, "thekey46")]
        [InlineData(3, "thekey47")]
        [InlineData(3, "thekey48")]
        [InlineData(2, "thekey49")]
        [InlineData(1, "thekey50")]
        [InlineData(1, "thekey51")]
        [InlineData(3, "thekey52")]
        [InlineData(2, "thekey53")]
        [InlineData(1, "thekey54")]
        [InlineData(2, "thekey55")]
        [InlineData(2, "thekey56")]
        [InlineData(3, "thekey57")]
        [InlineData(1, "thekey58")]
        [InlineData(2, "thekey59")]
        [InlineData(1, "thekey60")]
        [InlineData(2, "thekey61")]
        [InlineData(2, "thekey62")]
        [InlineData(2, "thekey63")]
        [InlineData(3, "thekey64")]
        [InlineData(3, "thekey65")]
        [InlineData(1, "thekey66")]
        [InlineData(2, "thekey67")]
        [InlineData(3, "thekey68")]
        [InlineData(2, "thekey69")]
        [InlineData(2, "thekey70")]
        [InlineData(3, "thekey71")]
        [InlineData(1, "thekey72")]
        [InlineData(2, "thekey73")]
        [InlineData(2, "thekey74")]
        [InlineData(2, "thekey75")]
        [InlineData(1, "thekey76")]
        [InlineData(2, "thekey77")]
        [InlineData(3, "thekey78")]
        [InlineData(2, "thekey79")]
        [InlineData(2, "thekey80")]
        [InlineData(1, "thekey81")]
        [InlineData(1, "thekey82")]
        [InlineData(2, "thekey83")]
        [InlineData(2, "thekey84")]
        [InlineData(2, "thekey85")]
        [InlineData(3, "thekey86")]
        [InlineData(3, "thekey87")]
        [InlineData(3, "thekey88")]
        [InlineData(3, "thekey89")]
        [InlineData(3, "thekey90")]
        [InlineData(2, "thekey91")]
        [InlineData(1, "thekey92")]
        [InlineData(3, "thekey93")]
        [InlineData(2, "thekey94")]
        [InlineData(2, "thekey95")]
        [InlineData(1, "thekey96")]
        [InlineData(1, "thekey97")]
        [InlineData(1, "thekey98")]
        [InlineData(1, "thekey99")]
        [InlineData(2, "thekey100")]
        public void TestMapKey(int index, string key)
        {
            IKeyMapper mapper = new KetamaKeyMapper([
                new HostEndpointWithPort("1", 11210),
                new HostEndpointWithPort("2", 11210),
                new HostEndpointWithPort("3", 11210)
            ]);

            var node = (KetamaNode) mapper.MapKey(key);
            Assert.Equal(index, int.Parse(node.Server.Host));
        }
    }
}
